// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EDITOR
  USER
}

model User {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  name               String
  password           String
  hashedRefreshToken String?
  role               Role      @default(USER)
  comments           Comment[]
  posts              Post[]
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  slug      String    @unique
  title     String
  content   String
  desc      String
  img       String?
  views     Int       @default(0)
  userEmail String
  user      User      @relation(fields: [userEmail], references: [email])
  catSlug   String
  category  Category  @relation(fields: [catSlug], references: [slug])
  comments  Comment[]
}

model Category {
  id    Int     @id @default(autoincrement())
  slug  String  @unique
  title String  @unique
  img   String?
  posts Post[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_author_id_user_id_fk")
  post_id   Int
  post      Post     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_post_id_post_id_fk")
}
